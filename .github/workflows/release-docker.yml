name: Create and publish a Docker image

on:
  push:
    branches: ["main"]
    paths:
      - "testing/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: connector

jobs:
  release-version:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.release-version.outputs.RELEASE_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4.1.0
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"
      - name: Extract version
        working-directory: ./testing/connector
        shell: bash
        run: |-
          VERSION=`./gradlew properties  | awk '/^version:/ {print $2}'`
          echo "Connector version: ${VERSION}"
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_OUTPUT

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [release-version]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4.1.0
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      - name: Print version
        run: |-
          echo '${{ toJSON(needs.release-version.outputs) }}'
          echo "Releasing Connector version: ${{ needs.release-version.outputs.RELEASE_VERSION }}"
      - name: Package connector
        shell: bash
        working-directory: ./testing/connector
        run: |-
          ./gradlew shadowJar

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release-version.outputs.RELEASE_VERSION }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: testing/connector/src/main/docker
          build-args: |
            JAR=testing/connector/build/libs/connector.jar
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
